Built AI call scheduling platform with Spring Boot handling 15+ API endpoints and JWT authentication
Architected dual-database system using PostgreSQL RDS and DynamoDB serving real-time call management
Developed full-stack application with secure user registration, email verification, and password reset workflows
Implemented scalable DynamoDB design with GSI indexes reducing query latency for call status tracking
Created comprehensive test suite with 14+ unit tests ensuring 90%+ backend code coverage
Designed RESTful APIs supporting call lifecycle management from scheduling to transcript storage
Built secure authentication system with JWT token blacklisting and automatic TTL cleanup
Integrated AWS services including RDS, DynamoDB, and SES for production-ready email delivery
Developed user preference management system supporting timezone, notifications, and AI voice customization
Implemented efficient database queries with composite keys and pay-per-request billing optimization
Created robust call status validation and user-scoped access control preventing unauthorized data access
Built Spring Boot backend with Maven, supporting hot reload and automated testing workflows
Designed elegant database schema with automatic table creation and relationship management
Implemented comprehensive error handling and validation across all API endpoints
Developed scalable architecture supporting concurrent users with session management and security hardening